@isTest
public class MaintenanceRequestHelperTest {

    @isTest
    static void testPositiveCase() {
        // Positive test case
        Vehicle__c v = new Vehicle__c(Name='Test Vehicle');
        insert v;
        Equipment__c e = new Equipment__c(Name='Test Equipment', Vehicle__c=v.Id);
        insert e;
        Maintenance_Request__c m = new Maintenance_Request__c(Equipment__c=e.Id, Due_Date__c=Date.today().addDays(30));
        insert m;

        Test.startTest();
        MaintenanceRequestHelper.updateWorkOrders(new List<Maintenance_Request__c>{m});
        Test.stopTest();

        List<WorkOrder> workOrders = [SELECT Id, Name, Maintenance_Request__c FROM WorkOrder WHERE Maintenance_Request__c = :m.Id];
        System.assertEquals(1, workOrders.size());
        System.assertEquals('Test Equipment - Maintenance Request', workOrders[0].Name);
    }

    @isTest
    static void testNegativeCase() {
        // Negative test case
        Maintenance_Request__c m = new Maintenance_Request__c(Due_Date__c=Date.today().addDays(-1));
        insert m;

        Test.startTest();
        MaintenanceRequestHelper.updateWorkOrders(new List<Maintenance_Request__c>{m});
        Test.stopTest();

        List<WorkOrder> workOrders = [SELECT Id, Name, Maintenance_Request__c FROM WorkOrder WHERE Maintenance_Request__c = :m.Id];
        System.assertEquals(0, workOrders.size());
    }

    @isTest
    static void testBulkCase() {
        // Bulk test case
        List<Maintenance_Request__c> maintenanceRequests = new List<Maintenance_Request__c>();
        for(Integer i=0; i<200; i++) {
            Vehicle__c v = new Vehicle__c(Name='Test Vehicle ' + i);
            insert v;
            Equipment__c e = new Equipment__c(Name='Test Equipment ' + i, Vehicle__c=v.Id);
            insert e;
            Maintenance_Request__c m = new Maintenance_Request__c(Equipment__c=e.Id, Due_Date__c=Date.today().addDays(30));
            maintenanceRequests.add(m);
        }
        insert maintenanceRequests;

        Test.startTest();
        MaintenanceRequestHelper.updateWorkOrders(maintenanceRequests);
        Test.stopTest();

        List<WorkOrder> workOrders = [SELECT Id, Name, Maintenance_Request__c FROM WorkOrder];
        System.assertEquals(maintenanceRequests.size(), workOrders.size());
    }
}
